void main(void)
{
	unsigned int i,j;
	WDTCTL = WDTPW | WDTHOLD;
	P4DIR |= BIT7;//P4.7
	P4OUT |= BIT7;//P4.7输出高电平
	P4OUT &= ~BIT7;//P4.7输出低电平
	
	while(1)
	{
		P4OUT |= BIT7;//P4.7输出高电平
		for(i=60000;i>0;i--)
		{
			for(j=200;j>0;j--);
		}
		
		P4OUT &= ~BIT7;
		for(i=60000;i>0;i--)
		{
			for(j=200;j>0;j--);
		}
	}
}

bootargs root=/dev/nfs nfsroot=192.168.1.200:/home/yjw/rootfs ip=192.168.1.201:192.168.1.200:192.168.1.1:255.255.255.0::eth0:off init=/linuxrc console=ttySAC0 lcd=S702 coherent_pool=2M

./configure --prefix=$PWD/_install --cc=arm-linux-gcc --host-cc=gcc --target=arm-linux --enable-cross-compile --enable-mad --disable-gui --disable-menu --disable-x11 --yasm="" --extra-cflags=-I/home/yjw/work/libmad/libmad-0.15.1b/_install/include/ --extra-ldflags=-L/home/yjw/work/libmad/libmad-0.15.1b/_install/lib/




项目构思：
	1. 视频门禁--模拟校准时间按钮
		（1）先绘制一个【校时】按钮，点开有三个按钮出现界面【校准年月日】、【校准时分秒】、【退出】，
		（2）当点击校时按钮时，进来就把时间信息转换为秒保存起来，进入就开启定时器，退出时关闭定时器。定时器时间、年月日时间、时分秒时间分别保存
		（3）当点击校准时分秒时，校准完保存秒数点击保存并返回上一层。校准时分秒功能内多一个保存并返回的按钮
		（4）当点击校准年月日时，功能一样
	2.遇到的问题
		驱动主要也是移植，这方面倒是没什么问题，关键是逻辑问题。                                                                           单个模块可以，整合就会出现问题
		还要写项目前应该先规划管脚，否则最后一团乱。
		控制继电器管脚设置推挽最大3.3v，开关会跳来跳去
		电路电压不稳，有的3.3 5 12v，单个调试可以，   运放模块：LM298 a4988 lm2576
		TCP短连接
		
	3.怎么解决
	
	4.项目负责
	
	

	2.电子相册
	用到的东西：陀螺仪MMA7660  触摸FT5X06
	遇到的问题：
			驱动层一个问题就是注册触摸驱动为杂项设备时会出错，然后换成输入设备就没问题了。
			错误主要还是在编写应用层代码，遇到的问题也主要是应用层方面的逻辑代码
		1.在主线程里面处理多个功能的标志位。发现各个功能都特不灵敏。 最后创建了多线程得到解决。
		2.在创建了多线程之后，又有新问题了，图片显示有问题，然后各个线程间加了读写锁后解决
		3.删除图片时需要按下屏幕的时间。所以最开始是选择从驱动层获得时间。然而时间却不准确。最后在应用层代码多创建了一个计时线程得到了解决
		4.还要读取图片像素数据时颜色分量排列问题
	项目负责：驱动层按键、加速度计、触摸屏驱动，
	项目实现：1.底层按键、触摸屏、加速度计驱动采集并发送数据
			2.关键函数：坐标数据处理、加速度计数据处理、各类图片RGB提取、图片预览数据处理、字库读取、LCD画点、图片缩放
			3.创建多线程和读写锁来处理数据
			4.异常、正常退出收尾处理

	
	
	
	3.音乐播放器
	遇到的问题：
		1.中断处理数据多了会出现歌词不对应，那么每进中断次数到一定的次数对计时变量进行改变
		2.歌词显示时每句最后一直有乱码，最后发实现行结束标志为\r\n,而不是\n
		3.还有就是各个切换功能直接的逻辑关系了。

	4.HTTP视频监控
		项目流程：采集端：
					1.创建套接字
					2.摄像头初始化（预设宽高、摄像头设备类型、系统自动设置属性、申请缓冲区然后进行映射、将缓冲区放入采集队列、开启摄像头）
					3.创建采集并发送数据线程
					4.监控连接状态
				  服务端: 1.创建服务器套接字
						  2.创建接收摄像头数据的线程
						  3.编写一个处理HTTP客户端请求的函数
						  4.轮询等待HTTP客户端连接，连接一个创建一个线程(HTTP处理函数里主要有两个函数，一个发文件函数，一个发数据流函数)
		遇到的问题：
			1.网络的稳定性，有时网络清空不好时，会突然断开，然后采集过程就放在创建采集线程中，主线程用来轮询判断网络是否断开
			2.服务器端发送数据流到HTTP客户端时，收到数据但就是显示不出来图像。最后是发现发送报文头和数据流之间没有加回车换行符和数据流之间的间隔符之前没加“--”
			

	5.物联网监控系统
			   采集端： 1.编写树莓派与服务器端的网络连接函数   2.编写摄像头采集线程函数
						3.编写帧变化线程的函数				   4.编写视频发送线程的函数
					    5.编写视频帧变化队列函数			   6.编写视频发送队列函数，发送5s一个的短视频到服务器端
			  服务端：  1.编写视频接收函数					   2.编写播放函数，播放的为短视频
					    3.编写每20个短视频合为一个视频的线程   4.编写向公网推rtmp流视频线程函数
			
			遇到的问题：1.安装各种库问题。当初还不太了解linux系统环境配置。所以安装库废了很大劲。
						2.最关键是怎么减少带宽，那时候考虑了不少时间。最终决定直接发送合成的短视频过去来降低带宽。然后在服务端再合成一个更长的视频。
						3.编写向公网推rtmp流时，推流格式和时间长短问题，支持h.264格式,而原视频流为MPEG4格式的
						4.格式转换方式，是通过调用命令行命令更改格式
						5.合成视频方式，是通过调用命令行命令合成还是通过代码合成。
						
			负责：采集端拉取网络视频流。服务端视频接收线程，视频播放线程，视频合成线程，视频推流线程。
						
						
	6.智能语音报警系统
		
		遇到的问题：
			
		图片格式，JPG取模显示后有噪点，转换为RGB565格式，较大的图必须使用纯色背景，不然会出现模糊的条纹.
			
		0.最大的问题是没有资料，自己一个一个找
		1.代码量很大，而且注释少。要细心解读，并且做好笔记记录
		2.制作图片flash时烧录方法
		3.制作前一定要检查好图片大小是否对应，图片是否齐全。制作bin文件时注意图片摆放顺序。合成整个bin文件时也要注意和代码宏定义的顺序一致.
		4.制作flash时要一定规划好烧录顺序和其地址，读取数据时哪怕地址偏一个字节，图片全部会错乱。那么重新制作flash和拆装flash少说又要消耗将近大半天的时间
		5.LCD显示上下左右偏移。通过调试前后消隐时间。
		6.制作音频flash
		7.433通信 EV1527、PT2262编解码
		8.GSM的调试  SIM800C		9.音频播放问题，播放的音频文件偏移。通过多次测试，发现是单独播放一段音频不会产生问题。连续播放每次第一首不会有问题，后面的全部偏移一首。然后根据这个问题在原有的基础上修改了底层驱动.
	


c程序员是什么： 就是敲代码，让想法变成现实



PC机与开发板数据传输的方式：


1.通过网络方式传输(NFS网络挂载)

2.最常用的通过串口传输  TTL(0~3.3V)转RS232(-12~12  -5~-12表示逻辑0 )

3.外部也可以通过SD卡传输（开发板从SD卡启动或者读取SD卡数据）



SPI 
	四线：SDI SDO SCLK  CS  数据线，时钟线，数据命令选择，片选                                      同步全双工,从高到低传输  几M
	三线: SDI/O SCLK  CS  合并数据输入输出在一起，也有舍弃CS的三线，但不是真正意义上的三线SPI

IIC:
	两线 SCL SDA	同步半双工   从高到低  标准模式100k  快速400k 高速 3.4M
串口：
	三线 TX RX GND 异步全双工    从低到高   RS232 20kbps


板球控制系统，就是让一个球从一个点精确的到达另一个点。这里我们采用USB摄像头获
取图像数据，反馈给电脑。代码端采用opencv来进行图像处理，对小球当前位置进行解析并使用PID来调控对舵机角度。然后下发串口指令到
舵机，进而小球滚动，摄像头再获取位置信息，从而形成一个闭环。
    Opencv、pid、舵机、usb摄像头





